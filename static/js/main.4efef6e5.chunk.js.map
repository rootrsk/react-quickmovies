{"version":3,"sources":["components/Container.js","components/genre/GenreTest.js","components/genre/Genre.js","components/HomePage.js","components/GenreNavHeader.js","components/GenreNav.js","components/SingleMove.js","components/cred/MovieForm.js","components/cred/DeleteMovie.js","components/cred/UpdateMovie.js","components/cred/CreateMovei.js","components/cred/Crud.js","components/cred/Movies.js","components/App.js","serviceWorker.js","index.js"],"names":["Container","props","className","movie","title","to","pathname","state","src","poster","alt","GenreTest","movies","componentDidMount","a","axios","response","setState","data","this","genre","map","key","id","React","Component","Genre","BASE_URL","process","filter","toLowerCase","includes","console","log","_id","HomePage","Math","random","GenreMovieHeader","GenreNav","SingleMovie","location","imdb","category","year","release_date","starcast","director","description","screenshot","download_link","torrent_link","stream_link","onClick","window","history","back","href","MoviePosterRender","MovieForm","url","onTitleChange","e","target","value","onStarcastChange","onDirectorChange","onImdbChange","onDescriptionChange","onYearChange","onGenreChange","Array","from","selectedOptions","option","onDownloadLinkChange","onStreamLinkChange","onTorrentLinkChange","onPosterChange","files","onScreenShotChange","onSubmit","preventDefault","formData","FormData","append","Operation","method","headers","encType","name","type","placeholder","onChange","defaultValue","step","multiple","DeleteMovie","UpdateMovie","CreateMovie","Crud","match","params","operation","Movies","Axios","App","exact","path","component","render","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4efef6e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\n\r\n\r\nconst Container = (props)=>{\r\n    return(\r\n        <div className='slides'>\r\n            <div>\r\n                {/* <img className='movie-poster' src={props.movie.poster} /> */}\r\n                <div className='title'>{props.movie.title} </div>\r\n                <Link \r\n                    \r\n                    to={{\r\n                        pathname: '/movie/'+props.movie.title,\r\n                        state:props.movie\r\n                    }}\r\n                    movie={props.movie}  \r\n                >   <img className='movie-poster' src={props.movie.poster}alt='img' /></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React from 'react';\r\nimport axios from 'axios'\r\nimport Container from '../Container'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass GenreTest extends React.Component{\r\n    state={movies:[]}\r\n    componentDidMount = async() =>{\r\n        const response = await axios('https://quickmovies.herokuapp.com/movies')\r\n        this.setState({movies:response.data})\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <div className='slider-header'>\r\n                    <div className='genere'>{this.props.genre}</div>\r\n                    <Link to='#' className='view-more'>View More</Link>\r\n                </div>\r\n                    <div className='slider'>\r\n                        {this.state.movies.map((movie)=>{\r\n                            return <Container movie={movie} key={movie.id}/>\r\n                        })}\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GenreTest","import React from 'react';\r\nimport axios from 'axios'\r\nimport Container from '../Container'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Genre extends React.Component{\r\n    state={movies:[]}\r\n    componentDidMount = async() =>{\r\n        const BASE_URL = process.env.BASE_URL || 'https://quickmovies.herokuapp.com/'\r\n        // const Localhost = 'http://localhost:3001/movies/'\r\n        const response = await axios(BASE_URL+'movies/'+this.props.genre)\r\n        const movies = response.data.filter((movie)=>{\r\n            return movie.genre.toLowerCase().includes('action')\r\n        })\r\n        console.log(movies)\r\n        this.setState({movies:movies})\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <div className='slider-header'>\r\n                    <div className='genere'>{this.props.genre}</div>\r\n                    <Link to='/genre' className='view-more'>View More</Link>\r\n                </div>\r\n                    <div className='slider'>\r\n                        {this.state.movies.map((movie)=>{\r\n                            return <Container movie={movie} key={movie._id}/>\r\n                        })}\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Genre","import React from 'react';\r\nimport GenreTest from './genre/GenreTest'\r\nimport Genre from './genre/Genre'\r\n\r\nclass HomePage extends React.Component{\r\n    state={movies:[1,2,3,4,5,6,7,8,9,10]}\r\n    componentDidMount = async() =>{\r\n       \r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Genre genre={'Action'} key={Math.random()*100}/>\r\n                <Genre genre={'Advanture'} key={Math.random()*100}/>\r\n                <Genre genre={'Comedy'} key={Math.random()*100}/>\r\n                <Genre genre={'Crime'} key={Math.random()*100}/>\r\n                <Genre genre={'Drama'} key={Math.random()*100}/>\r\n                <Genre genre={'Fantasy'} key={Math.random()*100}/>\r\n                <Genre genre={'Historical'} key={Math.random()*100}/>\r\n                <Genre genre={'Horror'} key={Math.random()*100}/>\r\n                <Genre genre={'Mistry'} key={Math.random()*100}/>\r\n                <Genre genre={'Romance'} key={Math.random()*100}/>\r\n                <Genre genre={'Sci-Fi'} key={Math.random()*100}/>\r\n                <Genre genre={'Thriller'} key={Math.random()*100}/>\r\n                <GenreTest genre={'Drama'} />\r\n                <GenreTest genre='Thriller'/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default HomePage","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst GenreMovieHeader = () =>{\r\n\r\n    return(\r\n        <div className='genre-movie-header'>\r\n            <Link to='/' >&#171;</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreMovieHeader","import React from 'react'\r\nimport axios from 'axios'\r\nimport Container from './Container'\r\nimport GenreMovieHeader from './GenreNavHeader'\r\n\r\n\r\nclass GenreNav extends React.Component{\r\n    state={movies:[]}\r\n    componentDidMount = async () =>{\r\n        const response = await axios('https://quickmovies.herokuapp.com/movies')\r\n        this.setState({movies:response.data})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <GenreMovieHeader />\r\n                <div className='genre-slider'>\r\n                    {this.state.movies.map((movie)=>{\r\n                        return(\r\n                            // <div className='slides'> </div>\r\n                            <Container movie={movie} key={movie.id} />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default GenreNav ","import React from 'react';\r\n\r\n\r\nclass SingleMovie extends React.Component{\r\n    state={}\r\n    componentDidMount = async () =>{\r\n        console.log(this.props)\r\n        if(this.props.location.state){\r\n            console.log(this.props.location.state)\r\n            this.setState({movie:this.props.location})\r\n            this.setState({\r\n                id: this.props.location.state.id,\r\n                title: this.props.location.state.title,\r\n                genre: this.props.location.state.genre,\r\n                imdb: this.props.location.state.imdb,\r\n                category:this.props.location.state.category ,\r\n                year: this.props.location.state.release_date,\r\n                starcast : this.props.location.state.starcast,\r\n                director: this.props.location.state.director,\r\n                description: this.props.location.state.description,\r\n                poster: this.props.location.state.poster,\r\n                screenshot : this.props.location.state.screenshot,\r\n                download_link:this.props.location.state.download_link,\r\n                torrent_link:this.props.location.state.torrent_link,\r\n                stream_link:this.props.location.state.stream_link\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='single-movie'>\r\n                <div className='single-movie_details'>\r\n\r\n                    <button \r\n                        className={'back-button'}\r\n                        onClick={()=>{\r\n                            window.history.back()\r\n                        }}\r\n                    > &#171;</button>\r\n                    <h1 className='des_movie-title'>{this.state.title}</h1>\r\n                    <MoviePosterRender poster={this.state.poster}/>\r\n\r\n                    <div className='des_movie-details'>\r\n                        <p>IMDb Rating : {this.state.imdb} </p>\r\n                        <p>Genere : {this.state.genre} </p>\r\n                        <p>Release Date : {this.state.year}</p>\r\n                        <p>Star Cast : {this.state.starcast}</p>\r\n                        <p>Director: {this.state.director}</p>\r\n                        <p>Description : {this.state.description}</p>\r\n                    </div>\r\n                    \r\n                    <div className='download-link'>\r\n                        {this.state.download_link && <a href={this.state.download_link}>Download Link</a>}\r\n                        {this.state.torrent_link && <a href={this.state.torrent_link}>Torrent Link</a>}\r\n                        {this.state.stream_link && <a href={this.state.stream_link}>Stream Link</a>}\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst MoviePosterRender = (props) =>{\r\n    return(\r\n        <div className='des_movie-poster'>\r\n            <img className='img' src={props.poster} alt='movie-poster' />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MovieScreenShotRender = (props) =>{\r\n    return(\r\n        <div className='des_movie-poster'>\r\n            <img className='img-2' src={props.screenshot} alt='movie-poster' />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MovieDetalisRender = () =>{\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleMovie ","import React from 'react';\r\nimport axios from 'axios'\r\n\r\n\r\nclass MovieForm extends React.Component{\r\n\r\n    state={title:'',starcast:'',download_link:'',torrent_link:'',stream_link:''}\r\n    componentDidMount = async() =>{\r\n        if(this.props.id){\r\n            const response = await axios({\r\n                url:'https://quickmovies.herokuapp.com/movie/'+this.props.id,\r\n            })\r\n            console.log(response)\r\n            this.setState(response.data)\r\n\r\n        }\r\n    }\r\n    onTitleChange = (e) =>{\r\n        const title = e.target.value\r\n        this.setState({title})\r\n    }\r\n    onStarcastChange = (e) =>{\r\n        const starcast = e.target.value\r\n        this.setState({starcast})\r\n    }\r\n    onDirectorChange = (e)=>{\r\n        const director = e.target.value\r\n        this.setState({director})\r\n    }\r\n    onImdbChange = (e) =>{\r\n        const imdb = e.target.value\r\n        this.setState({imdb})\r\n    }\r\n    onDescriptionChange = (e) => {\r\n        const description = e.target.value\r\n        this.setState({description})\r\n    }\r\n    onYearChange = (e) =>{\r\n        const release_date = e.target.value\r\n        console.log(release_date)\r\n        this.setState({release_date})\r\n    }\r\n    onGenreChange = (e) =>{\r\n        const genre =Array.from(e.target.selectedOptions,(option)=>option.value) \r\n        this.setState({genre})\r\n    }\r\n    onDownloadLinkChange = (e) =>{\r\n        \r\n        const download_link = e.target.value\r\n        this.setState({download_link})\r\n    }\r\n    onStreamLinkChange = (e) =>{\r\n        const stream_link = e.target.value\r\n        this.setState({stream_link})\r\n    }\r\n    onTorrentLinkChange = (e) =>{\r\n        const torrent_link = e.target.value\r\n        this.setState({torrent_link})\r\n    }\r\n    onPosterChange = (e) =>{\r\n        const poster = e.target.files[0]\r\n        this.setState({poster})\r\n        \r\n    }\r\n    onScreenShotChange = (e) =>{\r\n        const screenshot = e.target.files[0]\r\n        this.setState({screenshot})\r\n    }\r\n    onSubmit = async(e) =>{\r\n        e.preventDefault()\r\n        const formData = new FormData()\r\n        formData.append('title',this.state.title)\r\n        formData.append('imdb',this.state.imdb)\r\n        formData.append('starcast',this.state.starcast)\r\n        formData.append('director',this.state.director)\r\n        formData.append('description',this.state.description)\r\n        formData.append('genre',this.state.genre)\r\n        formData.append('category',this.state.category)\r\n        formData.append('release_date',this.state.release_date)\r\n        formData.append('download_link',this.state.download_link)\r\n        console.log(this.state)\r\n        if(this.state.poster){\r\n            formData.append('poster',this.state.poster)\r\n        }\r\n        if(this.state.screenshot){\r\n            formData.append('screenshot',this.state.screenshot)\r\n        }\r\n        formData.append('torrent_link',this.state.torrent_link)\r\n        formData.append('stream_link',this.state.stream_link)\r\n        if(this.props.Operation ==='create'){\r\n            console.log(this.props.Operation)\r\n            const response = await axios({\r\n                url:'https://quickmovies.herokuapp.com/movie',\r\n                method: 'post',\r\n                data:formData,\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data; boundary=${form._boundary}'\r\n                }\r\n            })\r\n            console.log(response)\r\n\r\n        }\r\n        if(this.props.Operation==='update'){\r\n            const response = await axios({\r\n                url:'https://quickmovies.herokuapp.com/movie/'+this.state._id,\r\n                method: 'patch',\r\n                data:formData,\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data; boundary=${form._boundary}'\r\n                }\r\n            })\r\n            console.log(response)\r\n        }\r\n        if(this.props.Operation==='delete'){\r\n            const response = await axios({\r\n                url:'https://quickmovies.herokuapp.com/movie/'+this.state._id,\r\n                method: 'delete'\r\n            })\r\n        }\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='form'>\r\n                <form onSubmit={this.onSubmit} encType='multipart/form-data'>\r\n                    <input \r\n                        name='title'\r\n                        type='text'\r\n                        placeholder='Title'\r\n                        onChange={this.onTitleChange}\r\n                        defaultValue={this.state.title}\r\n                    />\r\n\r\n                    <input \r\n                        name='starcast'\r\n                        type='text'\r\n                        placeholder='Starcast'\r\n                        onChange={this.onStarcastChange}\r\n                        defaultValue={this.state.starcast}\r\n                    />\r\n                    \r\n                    <input \r\n                        name='director'\r\n                        type='text'\r\n                        placeholder='Director'\r\n                        onChange={this.onDirectorChange}\r\n                        defaultValue={this.state.director}\r\n                    />\r\n                    <input \r\n                        name='imdb'\r\n                        type='number'\r\n                        step='0.01'\r\n                        placeholder='IMDb'onChange={this.onImdbChange}\r\n                        defaultValue={this.state.imdb}\r\n                    />\r\n                    <input \r\n                        name='release_date'\r\n                        type='date'\r\n                        placeholder='release_date'\r\n                        onChange={this.onYearChange}\r\n                        defaultValue={this.state.release_date}\r\n                        \r\n                    />\r\n                    <textarea \r\n                        name='description'\r\n                        placeholder='Description'\r\n                        onChange={this.onDescriptionChange}\r\n                        defaultValue={this.state.description}\r\n                        \r\n                    />\r\n                    <select \r\n                        multiple onChange={this.onGenreChange} \r\n                        defaultValue={this.state.genre}\r\n                        \r\n                    >\r\n                        <option>Action</option>\r\n                        <option>Adult</option>\r\n                        <option>Advanture</option>\r\n                        <option>Comedy</option>\r\n                        <option>Crime</option>\r\n                        <option>Drama</option>\r\n                        <option>Fantasy</option>\r\n                        <option>Historical</option>\r\n                        <option>Horror</option>\r\n                        <option>Mystery</option>\r\n                        <option>Romance</option>\r\n                        <option>Sci-Fi</option>\r\n                        <option>Thriller</option>\r\n                    </select>\r\n                    <input defaultValue={this.state.genre} />\r\n\r\n                    <input \r\n                        name='download_link'\r\n                        placeholder='Download Link'\r\n                        onChange={this.onDownloadLinkChange}\r\n                        defaultValue={this.state.download_link}\r\n                    />\r\n                    <input \r\n                        name='torrent_link'\r\n                        placeholder='Torrent Link'\r\n                        onChange={this.onTorrentLinkChange}\r\n                        defaultValue={this.state.torrent_link}\r\n                    />\r\n                    <input \r\n                        name='stream_link'\r\n                        placeholder='Stream Link'\r\n                        onChange={this.onStreamLinkChange}\r\n                        defaultValue={this.state.stream_link}\r\n                    />\r\n\r\n\r\n                    <input \r\n                        type='file' \r\n                        name='poster' \r\n                        onChange={this.onPosterChange}\r\n                    />\r\n                    <input \r\n                        type='file' \r\n                        name='screenshot' \r\n                        onChange={this.onScreenShotChange}\r\n                    />\r\n                    <button>Submit</button>\r\n                </form>\r\n                {/* {this.state.poster && <img src={URL.createObjectURL(this.state.poster)}alt='img' />} */}\r\n                {this.state.poster && <img src={this.state.poster} alt='img' />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieForm","import React from 'react';\r\nimport MovieForm from './MovieForm';\r\nimport axios from 'axios'\r\n\r\nconst DeleteMovie = (props) => {\r\n   \r\n    return(\r\n        <div>\r\n            <h1>Delete Movie</h1>\r\n            <MovieForm Operation={'delete'} id={props.id} />\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default DeleteMovie","import React from 'react';\r\nimport MovieForm from './MovieForm';\r\nimport axios from 'axios'\r\n\r\nconst UpdateMovie = (props) => {\r\n\r\n   \r\n    return(\r\n        <div> \r\n            <h1>Update Movie</h1>\r\n            <MovieForm Operation={'update'} id={props.id}/>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default UpdateMovie","import React from 'react';\r\nimport MovieForm from './MovieForm';\r\nimport axios from 'axios'\r\n\r\nconst CreateMovie = (props) => {\r\n    return(\r\n        <div> \r\n            <h1>Create Movie</h1>\r\n            <MovieForm Operation={'create'}  />\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default CreateMovie","import React from 'react';\r\nimport DeleteMovie from './DeleteMovie'\r\nimport UpdateMovie from './UpdateMovie';\r\nimport CreateMovie from './CreateMovei';\r\n\r\n\r\nclass Crud extends React.Component{\r\n    componentDidMount = () =>{\r\n        this.setState({id:this.props.match.params.id})\r\n        console.log(this.props.match.params.operation)\r\n        console.log(this.props.match.params.id)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.props.match.params.operation==='delete' && <DeleteMovie id={this.props.match.params.id} />}\r\n                {this.props.match.params.operation==='update' && <UpdateMovie id={this.props.match.params.id} />}\r\n                {this.props.match.params.operation==='create' && <CreateMovie id={this.props.match.params.id} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Crud","import React from 'react';\r\nimport { Link, Route, NavLink } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nclass Movies extends React.Component{\r\n    state={movies:[]}\r\n    componentDidMount = async() =>{\r\n        const response =  await Axios({\r\n            // url:'http://localhost:3001/movies',\r\n            url:'https://quickmovies.herokuapp.com/movies',\r\n            method:'get'\r\n\r\n        })\r\n        this.setState({movies:response.data})\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='admin-movies'>\r\n                {this.state.movies.map((movie)=>{\r\n                    return <Container movie={movie} key={movie.id} />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst Container = (props)=>{\r\n    return(\r\n        <div className='slides'>\r\n            <div>\r\n                <div className='title'>{props.movie.title} </div>\r\n                \r\n                \r\n            </div>\r\n            <img src={props.movie.poster} alt='poster' className='img' />\r\n            <div className='bottom'>\r\n                <NavLink to={'crud/delete/'+props.movie._id} >Delete</NavLink>\r\n                <NavLink to={'crud/update/'+props.movie._id} >Update</NavLink>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport HomePage from './HomePage'\r\nimport GenreNav from './GenreNav'\r\nimport SingleMovie from './SingleMove'\r\nimport Crud from './cred/Crud'\r\nimport Movies from './cred/Movies';\r\n\r\nclass App extends React.Component{\r\n    render(){\r\n        return(\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Switch >\r\n                        <Route exact path='/'  component={HomePage} />\r\n                        <Route exact path='/genre' component={GenreNav}/>\r\n                        <Route  path='/movie/:id' render={(props)=> <SingleMovie  {...props} /> }  />\r\n                        <Route  path='/crud/:operation/:id'  component={Crud}/>\r\n                        <Route  path='/movies'  component={Movies} />   \r\n                    </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default  App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles/styles.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}