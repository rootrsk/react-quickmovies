{"version":3,"sources":["components/Container.js","components/genre/Genre.js","components/HomePage.js","components/GenreNav.js","components/SingleMove.js","components/cred/MovieForm.js","components/cred/DeleteMovie.js","components/cred/UpdateMovie.js","components/cred/CreateMovei.js","components/cred/Crud.js","components/cred/Movies.js","components/Header.js","components/cred/Search.js","components/App.js","serviceWorker.js","index.js"],"names":["Container","props","className","to","pathname","movie","_id","title","state","src","Poster","alt","Genre","movies","componentDidMount","a","BASE_URL","process","axios","genre","response","setState","data","console","log","this","toLowerCase","map","key","React","Component","HomePage","Math","random","Helmet","name","content","GenreNav","page","button_text","url","match","params","PaginationHandler","button_state","length","prevState","concat","onClick","window","history","back","disabled","toUpperCase","SingleMovie","location","id","Axios","method","poster","download_link","href","torrent_link","stream_link","MoviePosterRender","MovieDetalisRender","imdb","audio","release_date","starcast","director","description","MovieForm","onFindMovieDetails","e","i","target","value","Title","imdbRating","Actors","Released","Director","Plot","onTitleChange","onStarcastChange","onDirectorChange","onImdbChange","onDescriptionChange","onYearChange","onGenreChange","Array","from","selectedOptions","option","onAudioChange","onDownloadLinkChange","onStreamLinkChange","onTorrentLinkChange","onPosterChange","files","onScreenShotChange","screenshot","onSubmit","preventDefault","formData","FormData","append","category","Operation","headers","encType","type","placeholder","onChange","defaultValue","step","multiple","DeleteMovie","UpdateMovie","CreateMovie","Crud","operation","Movies","Header","useHistory","searchMovie","query","push","Search","MovieRender","App","exact","path","component","render","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.20c422b3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Container = (props)=>{\r\n    return(\r\n        <div className='slides'>\r\n            <div className='slides_inner-div'>\r\n                {/* <div className='title'>{props.movie.title} </div> */}\r\n                <Link \r\n                    \r\n                    to={{\r\n                        pathname: '/movie/'+props.movie._id+'/'+props.movie.title,\r\n                        state:props.movie\r\n                    }}\r\n                    movie={props.movie}     \r\n                >   <img className='movie-poster' src={props.movie.Poster}alt='img' /></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React from 'react';\r\nimport axios from 'axios'\r\nimport Container from '../Container'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Genre extends React.Component{\r\n    state={movies:[]}\r\n    componentDidMount = async() =>{\r\n        try{\r\n            const BASE_URL = process.env.BASE_URL || 'https://quickmovies.herokuapp.com/'\r\n            const response = await axios(BASE_URL+'movies/'+this.props.genre)\r\n            this.setState({movies:response.data})\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n        \r\n    }\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <div className='slider-header'>\r\n                    <div className='genere'>{this.props.genre}</div>\r\n                    <Link to={'/genre/'+this.props.genre.toLowerCase()} className='view-more'>View More</Link>\r\n                </div>\r\n                <div className='slider'>\r\n                    {this.state.movies.map((movie)=>{\r\n                        return <Container movie={movie} key={movie._id}/>\r\n                    })}\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Genre","import React from 'react';\r\nimport Genre from './genre/Genre'\r\nimport { Helmet } from 'react-helmet';\r\n\r\nclass HomePage extends React.Component{\r\n    state={movies:[1,2,3,4,5,6,7,8,9,10]}\r\n    componentDidMount = async() =>{\r\n       \r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Genre genre={'Action'} key={Math.random()*100}/>\r\n                <Genre genre={'Adventure'} key={Math.random()*100}/>\r\n                <Genre genre={'Comedy'} key={Math.random()*100}/>\r\n                <Genre genre={'Crime'} key={Math.random()*100}/>\r\n                <Genre genre={'Drama'} key={Math.random()*100}/>\r\n                <Genre genre={'Fantasy'} key={Math.random()*100}/>\r\n                <Genre genre={'History'} key={Math.random()*100}/>\r\n                <Genre genre={'Horror'} key={Math.random()*100}/>\r\n                <Genre genre={'Mystery'} key={Math.random()*100}/>\r\n                <Genre genre={'Romance'} key={Math.random()*100}/>\r\n                <Genre genre={'Sci-Fi'} key={Math.random()*100}/>\r\n                <Genre genre={'Thriller'} key={Math.random()*100}/>\r\n                <div>\r\n                    <Helmet>\r\n                        <title>Quickmovies</title>\r\n                        <meta name='keyword' content='Quickmovies.xyz,Dual audio Movies ' />\r\n                        <meta name='description' content='All Types Of Moveis Are Available Here' />\r\n                    </Helmet>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default HomePage","import React from 'react'\r\nimport axios from 'axios'\r\nimport Container from './Container'\r\nimport { Helmet } from 'react-helmet';\r\n\r\n\r\nclass GenreNav extends React.Component{\r\n    state={movies:[],page:1,button_text:'Load More'}\r\n    componentDidMount = async () =>{\r\n        if(this.props){\r\n            const response = await axios({\r\n                url: 'https://quickmovies.herokuapp.com/movies/'+this.props.match.params.genre,\r\n            })\r\n            this.setState({movies:response.data})\r\n            \r\n        } else {\r\n        }\r\n        \r\n    }\r\n    PaginationHandler= async() =>{\r\n        this.setState({button_state:true})\r\n        await this.setState({page:this.state.page+1})\r\n        this.setState({button_text:'Loading...'})\r\n        console.log(this.state.page)\r\n        const response = await axios({\r\n            url: 'https://quickmovies.herokuapp.com/movies/'+this.props.match.params.genre+'?page='+this.state.page,\r\n            \r\n        })\r\n        response.data.length<15?this.setState({button_state:true}):this.setState({button_state:false})\r\n        if(response.data){\r\n            this.setState((prevState=>({movies:prevState.movies.concat(response.data)})))\r\n            if(this.state.button_state===true) this.setState({button_text:'No More To Load'})\r\n            this.state.button_state===true?this.setState({button_text:'No More To Load'}):this.setState({button_text:'Load More'})\r\n            \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='genre-main_div'>\r\n                <div>\r\n                    <button \r\n                        className={'back-button'}\r\n                        onClick={()=>{\r\n                            window.history.back()\r\n                        }}\r\n                    > &#171;</button>\r\n                </div>\r\n                <div className='genre-slider'>\r\n                    {this.state.movies.map((movie)=>{\r\n                        return(\r\n                            <Container movie={movie} key={movie._id} />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div>\r\n                    <button \r\n                        className={'back-button'}\r\n                        onClick={this.PaginationHandler}\r\n                        disabled={this.state.button_state}\r\n                    ><span className='load_more'>{this.state.button_text}</span> </button>\r\n                </div>\r\n                <Helmet >\r\n                    <title>{this.props.match.params.genre.toUpperCase()}</title>\r\n                    <meta name={'description'} content={this.props.match.params.genre} />\r\n                </Helmet>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default GenreNav ","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport Axios from 'axios';\r\n\r\n\r\nclass SingleMovie extends React.Component{\r\n    state={}\r\n    componentDidMount = async () =>{\r\n        if(this.props.location.state){\r\n            console.log(this.props.location.state)\r\n            this.setState({movie:this.props.location})\r\n            this.setState({...this.props.location.state})\r\n        }\r\n        else if(this.props.match.params.id){\r\n            const response = await Axios({\r\n                url: 'https://quickmovies.herokuapp.com/movie/'+this.props.match.params.id,\r\n                method:'get'\r\n            })\r\n            this.setState({...response.data})\r\n            console.log(this.state)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='single-movie_main-div'>\r\n                <div>\r\n                    <button \r\n                        className={'back-button'}\r\n                        onClick={()=>{\r\n                            window.history.back()\r\n                        }}\r\n                    > &#171;</button>\r\n                </div> \r\n\r\n                <div className='single-movie_details'>\r\n                    <h1 className='des_movie-title'>{this.state.title}</h1>\r\n                    {this.state.Poster&&<MoviePosterRender poster={this.state.Poster}/>}\r\n                    {this.state.title&&<MovieDetalisRender movie={this.state} />}\r\n\r\n                    <div className='download-link'>\r\n                        {this.state.download_link && <a href={this.state.download_link}>Download Link</a>}\r\n                        {this.state.torrent_link && <a href={this.state.torrent_link}>Torrent Link</a>}\r\n                        {this.state.stream_link && <a href={this.state.stream_link}>Stream Link</a>}\r\n                    </div>\r\n\r\n                    <Helmet>\r\n                        <title>{this.state.title}</title>\r\n                        <meta name={'keyword'} content={this.state.title} />\r\n                        <meta name={'description'} content={this.state.title+'quickmovies.xyz'} />\r\n                    </Helmet>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst MoviePosterRender = (props) =>{\r\n    return(\r\n        <div className='des_movie-poster'>\r\n            <img  src={props.poster} alt='movie-poster' />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MovieDetalisRender = (props) =>{\r\n    return(\r\n        <div className='des_movie-details'>\r\n                <p>IMDb Rating : {props.movie.imdb} </p>\r\n                <p>Genere : {props.movie.genre} </p>\r\n                {props.movie.audio && <p>Audio : {props.movie.audio}</p>}\r\n                <p>Release Date : {props.movie.release_date}</p>\r\n                <p className='description'>Star Cast : {props.movie.starcast}</p>\r\n                <p>Director: {props.movie.director}</p>\r\n                <p className='description'>Description : {props.movie.description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SingleMovie ","import React from 'react';\r\nimport axios from 'axios'\r\n\r\n\r\nclass MovieForm extends React.Component{\r\n\r\n    state={title:'',starcast:'',download_link:'',torrent_link:'',stream_link:''}\r\n    componentDidMount = async() =>{\r\n        if(this.props.id){\r\n            const response = await axios({\r\n                url:'https://quickmovies.herokuapp.com/movie/'+this.props.id,\r\n            })\r\n            this.setState(response.data)\r\n        }\r\n    }\r\n    onFindMovieDetails = async(e) =>{\r\n        const i = e.target.value\r\n        const response = await axios({\r\n            url:`http://www.omdbapi.com/?i=${i}&apikey=ce5aafa9`\r\n        })\r\n        if(response.data.Title){\r\n            this.setState({\r\n                title : response.data.Title,\r\n                imdb : response.data.imdbRating,\r\n                starcast : response.data.Actors,\r\n                genre : response.data.Genre,\r\n                release_date : response.data.Released,\r\n                director : response.data.Director,\r\n                description : response.data.Plot,\r\n                Poster : response.data.Poster\r\n            })\r\n\r\n            console.log(this.state)\r\n        }\r\n    }\r\n    onTitleChange = (e) =>{\r\n        const title = e.target.value\r\n        this.setState({title})\r\n    }\r\n    onStarcastChange = (e) =>{\r\n        const starcast = e.target.value\r\n        this.setState({starcast})\r\n    }\r\n    onDirectorChange = (e)=>{\r\n        const director = e.target.value\r\n        this.setState({director})\r\n    }\r\n    onImdbChange = (e) =>{\r\n        const imdb = e.target.value\r\n        this.setState({imdb})\r\n    }\r\n    onDescriptionChange = (e) => {\r\n        const description = e.target.value\r\n        this.setState({description})\r\n    }\r\n    onYearChange = (e) =>{\r\n        const release_date = e.target.value\r\n        console.log(release_date)\r\n        this.setState({release_date})\r\n    }\r\n    onGenreChange = (e) =>{\r\n        const genre =Array.from(e.target.selectedOptions,(option)=>option.value) \r\n        this.setState({genre})\r\n    }\r\n    onAudioChange = (e) =>{\r\n        const audio =  Array.from(e.target.selectedOptions,(option)=>option.value)\r\n        this.setState({audio})\r\n    }\r\n    onDownloadLinkChange = (e) =>{\r\n        \r\n        const download_link = e.target.value\r\n        this.setState({download_link})\r\n    }\r\n    onStreamLinkChange = (e) =>{\r\n        const stream_link = e.target.value\r\n        this.setState({stream_link})\r\n    }\r\n    onTorrentLinkChange = (e) =>{\r\n        const torrent_link = e.target.value\r\n        this.setState({torrent_link})\r\n    }\r\n    onPosterChange = (e) =>{\r\n        const poster = e.target.files[0]\r\n        this.setState({poster})\r\n        \r\n    }\r\n    onScreenShotChange = (e) =>{\r\n        const screenshot = e.target.files[0]\r\n        this.setState({screenshot})\r\n    }\r\n    onSubmit = async(e) =>{\r\n        e.preventDefault()\r\n        const formData = new FormData()\r\n        formData.append('title',this.state.title)\r\n        formData.append('imdb',this.state.imdb)\r\n        formData.append('starcast',this.state.starcast)\r\n        formData.append('director',this.state.director)\r\n        formData.append('description',this.state.description)\r\n        formData.append('genre',this.state.genre)\r\n        formData.append('category',this.state.category)\r\n        formData.append('release_date',this.state.release_date)\r\n        formData.append('Poster',this.state.Poster)\r\n        formData.append('audio',this.state.audio)\r\n        formData.append('download_link',this.state.download_link)\r\n        formData.append('torrent_link',this.state.torrent_link)\r\n        formData.append('stream_link',this.state.stream_link)\r\n        console.log(this.state)\r\n        if(this.state.poster){\r\n            formData.append('poster',this.state.poster)\r\n        }\r\n        if(this.state.screenshot){\r\n            formData.append('screenshot',this.state.screenshot)\r\n        }\r\n        \r\n        if(this.props.Operation ==='create'){\r\n            console.log(this.props.Operation)\r\n            const response = await axios({\r\n                url:'https://quickmovies.herokuapp.com/movie',\r\n                // url:'http://localhost:3001/movie',\r\n                method: 'post',\r\n                data:formData,\r\n                headers: {\r\n                    'Content-Type': `multipart/form-data; boundary=${'formData._boundary'}`\r\n                }\r\n            })\r\n            console.log(response)\r\n\r\n        }\r\n        if(this.props.Operation==='update'){\r\n            const response = await axios({\r\n                url:'https://quickmovies.herokuapp.com/movie/'+this.state._id,\r\n                method: 'patch',\r\n                data:formData,\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data; boundary=${form._boundary}'\r\n                }\r\n            })\r\n            console.log(response)\r\n        }\r\n        if(this.props.Operation==='delete'){\r\n            const response = await axios({\r\n                url:'https://quickmovies.herokuapp.com/movie/'+this.state._id,\r\n                // url: 'http://localhost:3001/movie/'+this.state._id,\r\n                method: 'delete'\r\n            })\r\n            console.log(response)\r\n        }\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='form'>\r\n                <form onSubmit={this.onSubmit} encType='multipart/form-data'>\r\n                    <input \r\n                        name='title'\r\n                        type='text'\r\n                        placeholder='Title'\r\n                        onChange={this.onTitleChange}\r\n                        defaultValue={this.state.title}\r\n                    />\r\n\r\n                    <input \r\n                        name='starcast'\r\n                        type='text'\r\n                        placeholder='Starcast'\r\n                        onChange={this.onStarcastChange}\r\n                        defaultValue={this.state.starcast}\r\n                    />\r\n                    \r\n                    <input \r\n                        name='director'\r\n                        type='text'\r\n                        placeholder='Director'\r\n                        onChange={this.onDirectorChange}\r\n                        defaultValue={this.state.director}\r\n                    />\r\n                    <input \r\n                        name='imdb'\r\n                        type='number'\r\n                        step='0.01'\r\n                        placeholder='IMDb'onChange={this.onImdbChange}\r\n                        defaultValue={this.state.imdb}\r\n                    />\r\n                    <input \r\n                        name='release_date'\r\n                        type='date'\r\n                        placeholder='release_date'\r\n                        onChange={this.onYearChange}\r\n                        defaultValue={this.state.release_date}\r\n                        \r\n                    />\r\n                    <textarea \r\n                        name='description'\r\n                        placeholder='Description'\r\n                        onChange={this.onDescriptionChange}\r\n                        defaultValue={this.state.description}\r\n                        \r\n                    />\r\n                    <select \r\n                        multiple onChange={this.onGenreChange} \r\n                        defaultValue={this.state.genre}\r\n                        \r\n                    >\r\n                        <option>Action</option>\r\n                        <option>Adult</option>\r\n                        <option>Adventure</option>\r\n                        <option>Comedy</option>\r\n                        <option>Crime</option>\r\n                        <option>Drama</option>\r\n                        <option>Fantasy</option>\r\n                        <option>History</option>\r\n                        <option>Horror</option>\r\n                        <option>Mystery</option>\r\n                        <option>Romance</option>\r\n                        <option>Sci-Fi</option>\r\n                        <option>Thriller</option>\r\n                    </select>\r\n                    <input defaultValue={this.state.genre} />\r\n                    <select onChange={this.onAudioChange} defaultValue={this.state.audio} multiple>\r\n                        <option>English</option>\r\n                        <option>Hindi</option>\r\n                        <option>Punjabi</option>\r\n                        <option>Telgu</option>\r\n                    </select>\r\n                    <input defaultValue={this.state.audio} />\r\n                    \r\n\r\n                    <input \r\n                        name='download_link'\r\n                        placeholder='Download Link'\r\n                        onChange={this.onDownloadLinkChange}\r\n                        defaultValue={this.state.download_link}\r\n                    />\r\n                    <input \r\n                        name='torrent_link'\r\n                        placeholder='Torrent Link'\r\n                        onChange={this.onTorrentLinkChange}\r\n                        defaultValue={this.state.torrent_link}\r\n                    />\r\n                    <input \r\n                        name='stream_link'\r\n                        placeholder='Stream Link'\r\n                        onChange={this.onStreamLinkChange}\r\n                        defaultValue={this.state.stream_link}\r\n                    />\r\n\r\n\r\n                    <input \r\n                        type='file' \r\n                        name='poster' \r\n                        onChange={this.onPosterChange}\r\n                    />\r\n                    <input \r\n                        type='file' \r\n                        name='screenshot' \r\n                        onChange={this.onScreenShotChange}\r\n                    />\r\n                    <button>Submit</button>\r\n                </form>\r\n                {this.state.Poster && <img src={this.state.Poster} className='des_movie-poster' alt='img' />}\r\n                {this.state.poster && <img src={this.state.poster} alt='img' />}\r\n                \r\n                <div>\r\n                    <input \r\n                        type='search' \r\n                        onChange={this.onFindMovieDetails}\r\n                        placeholder='Enter imdb tt'\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieForm","import React from 'react';\r\nimport MovieForm from './MovieForm';\r\n\r\nconst DeleteMovie = (props) => {\r\n   \r\n    return(\r\n        <div>\r\n            <h1>Delete Movie</h1>\r\n            <MovieForm Operation={'delete'} id={props.id} />\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default DeleteMovie","import React from 'react';\r\nimport MovieForm from './MovieForm';\r\n\r\nconst UpdateMovie = (props) => {\r\n\r\n   \r\n    return(\r\n        <div> \r\n            <h1>Update Movie</h1>\r\n            <MovieForm Operation={'update'} id={props.id}/>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default UpdateMovie","import React from 'react';\r\nimport MovieForm from './MovieForm';\r\n\r\nconst CreateMovie = (props) => {\r\n    return(\r\n        <div> \r\n            <h1>Create Movie</h1>\r\n            <MovieForm Operation={'create'}  />\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default CreateMovie","import React from 'react';\r\nimport DeleteMovie from './DeleteMovie'\r\nimport UpdateMovie from './UpdateMovie';\r\nimport CreateMovie from './CreateMovei';\r\n\r\n\r\nclass Crud extends React.Component{\r\n    componentDidMount = () =>{\r\n        this.setState({id:this.props.match.params.id})\r\n        console.log(this.props.match.params.operation)\r\n        console.log(this.props.match.params.id)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.props.match.params.operation==='delete' && <DeleteMovie id={this.props.match.params.id} />}\r\n                {this.props.match.params.operation==='update' && <UpdateMovie id={this.props.match.params.id} />}\r\n                {this.props.match.params.operation==='create' && <CreateMovie id={this.props.match.params.id} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Crud","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nclass Movies extends React.Component{\r\n    state={movies:[]}\r\n    componentDidMount = async() =>{\r\n        const response =  await Axios({\r\n            // url:'http://localhost:3001/movies',\r\n            url:'https://quickmovies.herokuapp.com/movies',\r\n            method:'get'\r\n\r\n        })\r\n        this.setState({movies:response.data})\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='admin-movies'>\r\n                {this.state.movies.map((movie)=>{\r\n                    return <Container movie={movie} key={movie.id} />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst Container = (props)=>{\r\n    return(\r\n        <div className='slides'>\r\n            <div>\r\n                <div className='title'>{props.movie.title} </div>\r\n                \r\n                \r\n            </div>\r\n            <img src={props.movie.Poster} alt='poster' className='img' />\r\n            <div className='bottom'>\r\n                <NavLink to={'crud/delete/'+props.movie._id} >Delete</NavLink>\r\n                <NavLink to={'crud/update/'+props.movie._id} >Update</NavLink>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nconst Header  = () =>{\r\n\r\n    let history = useHistory()\r\n    console.log(history)\r\n    const searchMovie = async (e) =>{\r\n        const query = e.target.value\r\n        const response = await Axios({\r\n            url:'https://quickmovies.herokuapp.com/search/?title='+query\r\n        })\r\n        history.push({\r\n            pathname:'/search',\r\n            response : response.data\r\n        })\r\n        \r\n    }\r\n    return(\r\n        <div className='header'>\r\n            <h1><Link to='/'>QuickMovies</Link></h1>\r\n            <input \r\n                type='search'\r\n                className='search-box' \r\n                placeholder='Search' \r\n                onChange ={searchMovie}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport Container from '../Container'\r\nimport { Helmet } from 'react-helmet';\r\n\r\n\r\nclass Search extends React.Component{\r\n    componentDidMount = () =>{\r\n        console.log(this.props.history)\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <button \r\n                    className={'back-button'}\r\n                        onClick={()=>{  \r\n                            this.props.history.push('/')\r\n                        }}\r\n                > &#171;</button>\r\n                {this.props.history.location.response&&<MovieRender movies={this.props.history.location.response} />}\r\n                <Helmet>\r\n                    <title>Search</title>\r\n                    <meta name='descrption' content='Search all type of movies here.'/>\r\n                </Helmet>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst MovieRender= (props) =>{\r\n    return(\r\n        <div>\r\n            <div className='genre-main_div'>\r\n                <div>\r\n                    \r\n                </div>\r\n                <div className='genre-slider'>\r\n                    {props.movies.map((movie)=>{\r\n                        return(\r\n                            <Container movie={movie} key={movie._id} />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport HomePage from './HomePage'\r\nimport GenreNav from './GenreNav'\r\nimport SingleMovie from './SingleMove'\r\nimport Crud from './cred/Crud'\r\nimport Movies from './cred/Movies';\r\nimport Header from './Header'\r\nimport Search from './cred/Search'\r\n\r\nclass App extends React.Component{\r\n    render(){\r\n        return(\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Header />\r\n                    <Switch >\r\n                        <Route exact path='/'  component={HomePage} />\r\n                        <Route exact path='/genre/:genre' component={GenreNav}/>\r\n                        <Route  path='/movie/:id/:title' render={(props)=> <SingleMovie  {...props} /> }  />\r\n                        <Route  path='/crud/:operation/:id'  component={Crud}/>\r\n                        <Route  path='/movies'  component={Movies} />\r\n                        <Route  path='/search' component={Search} />   \r\n                    </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default  App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}