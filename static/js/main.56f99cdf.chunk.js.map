{"version":3,"sources":["components/Container.js","components/genre/GenreTest.js","components/genre/Genre.js","components/HomePage.js","components/GenreNavHeader.js","components/GenreNav.js","components/SingleMove.js","components/cred/MovieForm.js","components/cred/Photo.js","components/App.js","serviceWorker.js","index.js"],"names":["Container","props","className","movie","title","to","pathname","state","src","poster","alt","GenreTest","movies","componentDidMount","a","axios","response","setState","data","this","genre","map","key","id","React","Component","Genre","BASE_URL","process","filter","toLowerCase","includes","console","log","_id","HomePage","Math","random","GenreMovieHeader","GenreNav","SingleMovie","location","imdb","category","year","starcast","director","description","screenshot","onClick","window","history","back","MoviePosterRender","MovieForm","onTitleChange","e","target","value","onStarcastChange","onDirectorChange","onImdbChange","onDescriptionChange","onYearChange","onGenreChange","Array","from","selectedOptions","option","onDownloadLinkChange","download_link","onStreamLinkChange","stream_link","onTorrentLinkChange","torrent_link","onPosterChange","files","onScreenShotChange","onSubmit","preventDefault","formData","FormData","append","url","method","headers","encType","name","type","placeholder","onChange","defaultValue","step","date","multiple","URL","createObjectURL","Photo","action","App","exact","path","component","render","CreateMovie","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.56f99cdf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\n\r\n\r\nconst Container = (props)=>{\r\n    return(\r\n        <div className='slides'>\r\n            <div>\r\n                {/* <img className='movie-poster' src={props.movie.poster} /> */}\r\n                <div className='title'>{props.movie.title} </div>\r\n                <Link \r\n                    \r\n                    to={{\r\n                        pathname: '/movie/'+props.movie.title,\r\n                        state:props.movie\r\n                    }}\r\n                    movie={props.movie}  \r\n                >   <img className='movie-poster' src={props.movie.poster}alt='img' /></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React from 'react';\r\nimport axios from 'axios'\r\nimport Container from '../Container'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass GenreTest extends React.Component{\r\n    state={movies:[]}\r\n    componentDidMount = async() =>{\r\n        const response = await axios('https://quickmovies.herokuapp.com/movies')\r\n        this.setState({movies:response.data})\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <div className='slider-header'>\r\n                    <div className='genere'>{this.props.genre}</div>\r\n                    <Link to='#' className='view-more'>View More</Link>\r\n                </div>\r\n                    <div className='slider'>\r\n                        {this.state.movies.map((movie)=>{\r\n                            return <Container movie={movie} key={movie.id}/>\r\n                        })}\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GenreTest","import React from 'react';\r\nimport axios from 'axios'\r\nimport Container from '../Container'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Genre extends React.Component{\r\n    state={movies:[]}\r\n    componentDidMount = async() =>{\r\n        const BASE_URL = process.env.BASE_URL || 'https://quickmovies.herokuapp.com/'\r\n        // const Localhost = 'http://localhost:3001/movies/'\r\n        const response = await axios(BASE_URL+'movies/'+this.props.genre)\r\n        const movies = response.data.filter((movie)=>{\r\n            return movie.genre.toLowerCase().includes('action')\r\n        })\r\n        console.log(movies)\r\n        this.setState({movies:movies})\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <div className='slider-header'>\r\n                    <div className='genere'>{this.props.genre}</div>\r\n                    <Link to='/genre' className='view-more'>View More</Link>\r\n                </div>\r\n                    <div className='slider'>\r\n                        {this.state.movies.map((movie)=>{\r\n                            return <Container movie={movie} key={movie._id}/>\r\n                        })}\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Genre","import React from 'react';\r\nimport GenreTest from './genre/GenreTest'\r\nimport Genre from './genre/Genre'\r\n\r\nclass HomePage extends React.Component{\r\n    state={movies:[1,2,3,4,5,6,7,8,9,10]}\r\n    componentDidMount = async() =>{\r\n       \r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Genre genre={'Action'} key={Math.random()*100}/>\r\n                <Genre genre={'Advanture'} key={Math.random()*100}/>\r\n                <Genre genre={'Comedy'} key={Math.random()*100}/>\r\n                <Genre genre={'Crime'} key={Math.random()*100}/>\r\n                <Genre genre={'Drama'} key={Math.random()*100}/>\r\n                <Genre genre={'Fantasy'} key={Math.random()*100}/>\r\n                <Genre genre={'Historical'} key={Math.random()*100}/>\r\n                <Genre genre={'Horror'} key={Math.random()*100}/>\r\n                <Genre genre={'Mistry'} key={Math.random()*100}/>\r\n                <Genre genre={'Romance'} key={Math.random()*100}/>\r\n                <Genre genre={'Sci-Fi'} key={Math.random()*100}/>\r\n                <Genre genre={'Thriller'} key={Math.random()*100}/>\r\n                <GenreTest genre={'Drama'} />\r\n                <GenreTest genre='Thriller'/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default HomePage","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst GenreMovieHeader = () =>{\r\n\r\n    return(\r\n        <div className='genre-movie-header'>\r\n            <Link to='/' >&#171;</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreMovieHeader","import React from 'react'\r\nimport axios from 'axios'\r\nimport Container from './Container'\r\nimport GenreMovieHeader from './GenreNavHeader'\r\n\r\n\r\nclass GenreNav extends React.Component{\r\n    state={movies:[]}\r\n    componentDidMount = async () =>{\r\n        const response = await axios('https://quickmovies.herokuapp.com/movies')\r\n        this.setState({movies:response.data})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <GenreMovieHeader />\r\n                <div className='genre-slider'>\r\n                    {this.state.movies.map((movie)=>{\r\n                        return(\r\n                            // <div className='slides'> </div>\r\n                            <Container movie={movie} key={movie.id} />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default GenreNav ","import React from 'react';\r\n\r\n\r\nclass SingleMovie extends React.Component{\r\n    state={}\r\n    componentDidMount = async () =>{\r\n        console.log(this.props)\r\n        if(this.props.location.state){\r\n            console.log(this.props.location.state)\r\n            this.setState({movie:this.props.location})\r\n            this.setState({\r\n                id: this.props.location.state.id,\r\n                title: this.props.location.state.title,\r\n                genre: this.props.location.state.genre,\r\n                imdb: this.props.location.state.imdb,\r\n                category:this.props.location.state.category ,\r\n                year: this.props.location.state.year,\r\n                starcast : this.props.location.state.starcast,\r\n                director: this.props.location.state.director,\r\n                description: this.props.location.state.description,\r\n                poster: this.props.location.state.poster,\r\n                screenshot : this.props.location.state.screenshot\r\n            })\r\n        }\r\n        console.log(this.state)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='single-movie'>\r\n                <div className='single-movie_details'>\r\n\r\n                    <button \r\n                        className={'back-button'}\r\n                        onClick={()=>{\r\n                            window.history.back()\r\n                        }}\r\n                    > &#171;</button>\r\n                    <h1 className='des_movie-title'>{this.state.title}</h1>\r\n                    <MoviePosterRender poster={this.state.poster}/>\r\n                    <div className='des_movie-details'>\r\n                        <p>IMDb Rating : {this.state.imdb} </p>\r\n                        <p>Genere : {this.state.genre} </p>\r\n                        <p>Release Date : {this.state.year}</p>\r\n                        <p>Star Cast : {this.state.starcast}</p>\r\n                        <p>Director: {this.state.director}</p>\r\n                        <p>Description : {this.state.description}</p>\r\n                        \r\n                    </div>\r\n                    <div>\r\n                        {}\r\n                    </div>\r\n                    {/* <MovieScreenShotRender screenshot={this.state.poster} /> */}\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst MoviePosterRender = (props) =>{\r\n    return(\r\n        <div className='des_movie-poster'>\r\n            <img className='img' src={props.poster} alt='movie-poster' />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MovieScreenShotRender = (props) =>{\r\n    return(\r\n        <div className='des_movie-poster'>\r\n            <img className='img-2' src={props.screenshot} alt='movie-poster' />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MovieDetalisRender = () =>{\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleMovie ","import React from 'react';\r\nimport axios from 'axios'\r\n\r\n\r\nclass MovieForm extends React.Component{\r\n\r\n    state={title:'',starcast:'',}\r\n    componentDidMount = async() =>{\r\n\r\n    }\r\n    onTitleChange = (e) =>{\r\n        const title = e.target.value\r\n        this.setState({title})\r\n    }\r\n    onStarcastChange = (e) =>{\r\n        const starcast = e.target.value\r\n        this.setState({starcast})\r\n    }\r\n    onDirectorChange = (e)=>{\r\n        const director = e.target.value\r\n        this.setState({director})\r\n    }\r\n    onImdbChange = (e) =>{\r\n        const imdb = e.target.value\r\n        this.setState({imdb})\r\n    }\r\n    onDescriptionChange = (e) => {\r\n        const description = e.target.value\r\n        this.setState({description})\r\n    }\r\n    onYearChange = (e) =>{\r\n        const year = e.target.value\r\n        this.setState({year})\r\n    }\r\n    onGenreChange = (e) =>{\r\n        const genre =Array.from(e.target.selectedOptions,(option)=>option.value) \r\n        this.setState({genre})\r\n    }\r\n    onDownloadLinkChange = (e) =>{\r\n        const download_link = e.target.value\r\n        this.setState({download_link})\r\n    }\r\n    onStreamLinkChange = (e) =>{\r\n        const stream_link = e.target.value\r\n        this.setState({stream_link})\r\n    }\r\n    onTorrentLinkChange = (e) =>{\r\n        const torrent_link = e.target.value\r\n        this.setState({torrent_link})\r\n    }\r\n    onPosterChange = (e) =>{\r\n        const poster = e.target.files[0]\r\n        this.setState({poster})\r\n        \r\n    }\r\n    onScreenShotChange = (e) =>{\r\n        const screenshot = e.target.files[0]\r\n        this.setState({screenshot})\r\n    }\r\n    onSubmit = async(e) =>{\r\n        e.preventDefault()\r\n        const formData = new FormData()\r\n        formData.append('poster',this.state.poster)\r\n        formData.append('screenshot',this.state.screenshot)\r\n        formData.append('title',this.state.title)\r\n        formData.append('imdb',this.state.imdb)\r\n        formData.append('starcast',this.state.starcast)\r\n        formData.append('director',this.state.director)\r\n        formData.append('description',this.state.description)\r\n        formData.append('genre',this.state.genre)\r\n        formData.append('category',this.state.category)\r\n        formData.append('release_data',this.state.year)\r\n        formData.append('download_link',this.state.download_link)\r\n        formData.append('torrent_link',this.state.torrent_link)\r\n        formData.append('stream_link',this.state.stream_link)\r\n        const response = await axios({\r\n            url:'http://localhost:3001/movie',\r\n            method: 'post',\r\n            data:formData,\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data; boundary=${form._boundary}'\r\n              }\r\n        })\r\n        console.log(response)\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='form'>\r\n                <form onSubmit={this.onSubmit} encType='multipart/form-data'>\r\n                    <input \r\n                        name='title'\r\n                        type='text'\r\n                        placeholder='Title'\r\n                        onChange={this.onTitleChange}\r\n                        defaultValue={this.state.title}\r\n                    />\r\n                    <input \r\n                        name='starcast'\r\n                        type='text'\r\n                        placeholder='Starcast'\r\n                        onChange={this.onStarcastChange}\r\n                        defaultValue={this.state.starcast}\r\n                    />\r\n                    <input \r\n                        name='director'\r\n                        type='text'\r\n                        placeholder='Director'\r\n                        onChange={this.onDirectorChange}\r\n                        defaultValue={this.state.director}\r\n                    />\r\n                    <input \r\n                        name='imdb'\r\n                        type='number'\r\n                        step='0.01'\r\n                        placeholder='IMDb'onChange={this.onImdbChange}\r\n                        defaultValue={this.state.imdb}\r\n                    />\r\n                    <input \r\n                        name='release_date'\r\n                        type='date'\r\n                        placeholder='year'\r\n                        onChange={this.onYearChange}\r\n                        defaultValue={this.state.date}\r\n                    />\r\n                    <textarea \r\n                        name='description'\r\n                        placeholder='Description'\r\n                        onChange={this.onDescriptionChange}\r\n                        defaultValue={this.state.description}\r\n                        \r\n                    />\r\n                    <select \r\n                        multiple onChange={this.onGenreChange} \r\n                        defaultValue={this.state.genre}\r\n                        \r\n                    >\r\n                        <option>Action</option>\r\n                        <option>Adult</option>\r\n                        <option>Advanture</option>\r\n                        <option>Comedy</option>\r\n                        <option>Crime</option>\r\n                        <option>Drama</option>\r\n                        <option>Fantasy</option>\r\n                        <option>Historical</option>\r\n                        <option>Horror</option>\r\n                        <option>Mystery</option>\r\n                        <option>Romance</option>\r\n                        <option>Sci-Fi</option>\r\n                        <option>Thriller</option>\r\n                    </select>\r\n                    <input \r\n                        name='download_link'\r\n                        placeholder='Download Link'\r\n                        onChange={this.state.onDownloadLinkChange}\r\n                        defaultValue={this.state.download_link}\r\n                    />\r\n                    <input \r\n                        name='torrent_link'\r\n                        placeholder='Torrent Link'\r\n                        onChange={this.state.onTorrentLinkChange}\r\n                        defaultValue={this.state.torrent_link}\r\n                    />\r\n                    <input \r\n                        name='stream_link'\r\n                        placeholder='Stream Link'\r\n                        onChange={this.state.onStreamLinkChange}\r\n                        defaultValue={this.state.stream_link}\r\n                    />\r\n\r\n\r\n                    <input \r\n                        type='file' \r\n                        name='poster' \r\n                        onChange={this.onPosterChange}\r\n                    />\r\n                    <input \r\n                        type='file' \r\n                        name='screenshot' \r\n                        onChange={this.onScreenShotChange}\r\n                    />\r\n                    <button>Submit</button>\r\n                </form>\r\n                {this.state.poster && <img src={URL.createObjectURL(this.state.poster)}alt='img' />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieForm","import React from 'react';\r\n\r\nconst Photo = () =>{\r\n    return(\r\n        <div>\r\n            <form method='post' action='http://localhost:3001/movie' encType='multipart/form-data'>\r\n                <input  type='file' name='poster' />\r\n                <button>submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Photo","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport HomePage from './HomePage'\r\nimport GenreNav from './GenreNav'\r\nimport SingleMovie from './SingleMove'\r\nimport CreateMovie from './cred/MovieForm'\r\nimport Photo from './cred/Photo';\r\n\r\n\r\nclass App extends React.Component{\r\n    render(){\r\n        return(\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Switch >\r\n                        <Route exact path='/'  component={HomePage} />\r\n                        <Route exact path='/genre' component={GenreNav}/>\r\n                        <Route  path='/movie/:id' render={(props)=> <SingleMovie  {...props} /> }  />\r\n                        <Route  path='/movie-create' component={CreateMovie} />\r\n                        <Route  path='/photo' component={Photo} />\r\n                    </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default  App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles/styles.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}