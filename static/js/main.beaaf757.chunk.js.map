{"version":3,"sources":["components/Container.js","components/genre/Genre.js","components/HomePage.js","components/GenreNav.js","components/SingleMove.js","components/cred/MovieForm.js","components/cred/DeleteMovie.js","components/cred/UpdateMovie.js","components/cred/CreateMovei.js","components/cred/Crud.js","components/cred/Movies.js","components/Header.js","components/cred/Search.js","components/App.js","serviceWorker.js","index.js"],"names":["Container","props","className","movie","title","to","pathname","state","src","Poster","alt","Genre","movies","componentDidMount","a","BASE_URL","process","axios","genre","response","setState","data","console","log","this","toLowerCase","map","key","_id","React","Component","HomePage","Math","random","GenreNav","page","url","match","params","PaginationHandler","button_state","length","prevState","concat","onClick","window","history","back","disabled","SingleMovie","location","id","imdb","category","year","release_date","starcast","director","description","poster","screenshot","download_link","torrent_link","stream_link","href","MoviePosterRender","MovieForm","onFindMovieDetails","e","i","target","value","Title","imdbRating","Actors","Released","Director","Plot","onTitleChange","onStarcastChange","onDirectorChange","onImdbChange","onDescriptionChange","onYearChange","onGenreChange","Array","from","selectedOptions","option","onDownloadLinkChange","onStreamLinkChange","onTorrentLinkChange","onPosterChange","files","onScreenShotChange","onSubmit","preventDefault","formData","FormData","append","Operation","method","headers","encType","name","type","placeholder","onChange","defaultValue","step","multiple","DeleteMovie","UpdateMovie","CreateMovie","Crud","operation","Movies","Axios","Header","useHistory","searchMovie","query","push","Search","MovieRender","App","exact","path","component","render","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.beaaf757.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Container = (props)=>{\r\n    return(\r\n        <div className='slides'>\r\n            <div className='slides_inner-div'>\r\n                <div className='title'>{props.movie.title} </div>\r\n                <Link \r\n                    \r\n                    to={{\r\n                        pathname: '/movie/'+props.movie.title,\r\n                        state:props.movie\r\n                    }}\r\n                    movie={props.movie}  \r\n                >   <img className='movie-poster' src={props.movie.Poster}alt='img' /></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React from 'react';\r\nimport axios from 'axios'\r\nimport Container from '../Container'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Genre extends React.Component{\r\n    state={movies:[]}\r\n    componentDidMount = async() =>{\r\n        try{\r\n            const BASE_URL = process.env.BASE_URL || 'https://quickmovies.herokuapp.com/'\r\n            // const Localhost = 'http://localhost:3001/movies/'\r\n            const response = await axios(BASE_URL+'movies/'+this.props.genre)\r\n            this.setState({movies:response.data})\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n        \r\n    }\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <div className='slider-header'>\r\n                    <div className='genere'>{this.props.genre}</div>\r\n                    <Link to={'/genre/'+this.props.genre.toLowerCase()} className='view-more'>View More</Link>\r\n                </div>\r\n                    <div className='slider'>\r\n                        {this.state.movies.map((movie)=>{\r\n                            return <Container movie={movie} key={movie._id}/>\r\n                        })}\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Genre","import React from 'react';\r\nimport Genre from './genre/Genre'\r\n\r\nclass HomePage extends React.Component{\r\n    state={movies:[1,2,3,4,5,6,7,8,9,10]}\r\n    componentDidMount = async() =>{\r\n       \r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Genre genre={'Action'} key={Math.random()*100}/>\r\n                <Genre genre={'Adventure'} key={Math.random()*100}/>\r\n                <Genre genre={'Comedy'} key={Math.random()*100}/>\r\n                <Genre genre={'Crime'} key={Math.random()*100}/>\r\n                <Genre genre={'Drama'} key={Math.random()*100}/>\r\n                <Genre genre={'Fantasy'} key={Math.random()*100}/>\r\n                <Genre genre={'History'} key={Math.random()*100}/>\r\n                <Genre genre={'Horror'} key={Math.random()*100}/>\r\n                <Genre genre={'Mystery'} key={Math.random()*100}/>\r\n                <Genre genre={'Romance'} key={Math.random()*100}/>\r\n                <Genre genre={'Sci-Fi'} key={Math.random()*100}/>\r\n                <Genre genre={'Thriller'} key={Math.random()*100}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default HomePage","import React from 'react'\r\nimport axios from 'axios'\r\nimport Container from './Container'\r\n\r\n\r\nclass GenreNav extends React.Component{\r\n    state={movies:[],page:1}\r\n    componentDidMount = async () =>{\r\n        if(this.props){\r\n            const response = await axios({\r\n                url: 'https://quickmovies.herokuapp.com/movies/'+this.props.match.params.genre,\r\n            })\r\n            this.setState({movies:response.data})\r\n            \r\n        } else {\r\n            \r\n\r\n        }\r\n        \r\n    }\r\n    PaginationHandler= async() =>{\r\n        console.log('clicked')\r\n        this.setState({button_state:true})\r\n        await this.setState({page:this.state.page+1})\r\n        const response = await axios({\r\n            url: 'https://quickmovies.herokuapp.com/movies/'+this.props.match.params.genre+'?page='+this.state.page,\r\n        })\r\n        \r\n        response.data.length<15?this.setState({button_state:true}):this.setState({button_state:false})\r\n        if(response.data){\r\n            this.setState((prevState=>({movies:prevState.movies.concat(response.data)})))\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='genre-main_div'>\r\n                <div>\r\n                    <button \r\n                        className={'back-button'}\r\n                        onClick={()=>{\r\n                            window.history.back()\r\n                        }}\r\n                    > &#171;</button>\r\n                </div>\r\n                <div className='genre-slider'>\r\n                    {this.state.movies.map((movie)=>{\r\n                        return(\r\n                            <Container movie={movie} key={movie._id} />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div>\r\n                    <button \r\n                        className={'back-button'}\r\n                        onClick={this.PaginationHandler}\r\n                        disabled={this.state.button_state}\r\n                    ><span className='load_more'>Load More</span> </button>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default GenreNav ","import React from 'react';\r\n\r\n\r\nclass SingleMovie extends React.Component{\r\n    state={}\r\n    componentDidMount = async () =>{\r\n        if(this.props.location.state){\r\n            console.log(this.props.location.state)\r\n            this.setState({movie:this.props.location})\r\n            this.setState({\r\n                id: this.props.location.state.id,\r\n                title: this.props.location.state.title,\r\n                genre: this.props.location.state.genre,\r\n                imdb: this.props.location.state.imdb,\r\n                category:this.props.location.state.category ,\r\n                year: this.props.location.state.release_date,\r\n                starcast : this.props.location.state.starcast,\r\n                director: this.props.location.state.director,\r\n                description: this.props.location.state.description,\r\n                poster: this.props.location.state.poster,\r\n                screenshot : this.props.location.state.screenshot,\r\n                download_link:this.props.location.state.download_link,\r\n                torrent_link:this.props.location.state.torrent_link,\r\n                stream_link:this.props.location.state.stream_link,\r\n                Poster : this.props.location.state.Poster\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='single-movie_main-div'>\r\n                <div>\r\n                    <button \r\n                        className={'back-button'}\r\n                        onClick={()=>{\r\n                            window.history.back()\r\n                        }}\r\n                    > &#171;</button>\r\n                </div> \r\n\r\n                <div className='single-movie_details'>\r\n                    <h1 className='des_movie-title'>{this.state.title}</h1>\r\n                    <MoviePosterRender poster={this.state.Poster}/>\r\n\r\n                    <div className='des_movie-details'>\r\n                        <p>IMDb Rating : {this.state.imdb} </p>\r\n                        <p>Genere : {this.state.genre} </p>\r\n                        <p>Release Date : {this.state.year}</p>\r\n                        <p className='description'>Star Cast : {this.state.starcast}</p>\r\n                        <p>Director: {this.state.director}</p>\r\n                        <p className='description'>Description : {this.state.description}</p>\r\n                    </div>\r\n                    \r\n                    <div className='download-link'>\r\n                        {this.state.download_link && <a href={this.state.download_link}>Download Link</a>}\r\n                        {this.state.torrent_link && <a href={this.state.torrent_link}>Torrent Link</a>}\r\n                        {this.state.stream_link && <a href={this.state.stream_link}>Stream Link</a>}\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst MoviePosterRender = (props) =>{\r\n    return(\r\n        <div className='des_movie-poster'>\r\n            <img  src={props.poster} alt='movie-poster' />\r\n        </div>\r\n    )\r\n}\r\n\r\n// const MovieScreenShotRender = (props) =>{\r\n//     return(\r\n//         <div className='des_movie-poster'>\r\n//             <img className='img-2' src={props.screenshot} alt='movie-poster' />\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// const MovieDetalisRender = () =>{\r\n//     return(\r\n//         <div>\r\n\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport default SingleMovie ","import React from 'react';\r\nimport axios from 'axios'\r\n\r\n\r\nclass MovieForm extends React.Component{\r\n\r\n    state={title:'',starcast:'',download_link:'',torrent_link:'',stream_link:''}\r\n    componentDidMount = async() =>{\r\n        if(this.props.id){\r\n            const response = await axios({\r\n                url:'https://quickmovies.herokuapp.com/movie/'+this.props.id,\r\n            })\r\n            this.setState(response.data)\r\n        }\r\n    }\r\n    onFindMovieDetails = async(e) =>{\r\n        const i = e.target.value\r\n        const response = await axios({\r\n            url:`http://www.omdbapi.com/?i=${i}&apikey=ce5aafa9`\r\n        })\r\n        if(response.data.Title){\r\n            this.setState({\r\n                title : response.data.Title,\r\n                imdb : response.data.imdbRating,\r\n                starcast : response.data.Actors,\r\n                genre : response.data.Genre,\r\n                release_date : response.data.Released,\r\n                director : response.data.Director,\r\n                description : response.data.Plot,\r\n                Poster : response.data.Poster\r\n            })\r\n\r\n            console.log(this.state)\r\n        }\r\n    }\r\n    onTitleChange = (e) =>{\r\n        const title = e.target.value\r\n        this.setState({title})\r\n    }\r\n    onStarcastChange = (e) =>{\r\n        const starcast = e.target.value\r\n        this.setState({starcast})\r\n    }\r\n    onDirectorChange = (e)=>{\r\n        const director = e.target.value\r\n        this.setState({director})\r\n    }\r\n    onImdbChange = (e) =>{\r\n        const imdb = e.target.value\r\n        this.setState({imdb})\r\n    }\r\n    onDescriptionChange = (e) => {\r\n        const description = e.target.value\r\n        this.setState({description})\r\n    }\r\n    onYearChange = (e) =>{\r\n        const release_date = e.target.value\r\n        console.log(release_date)\r\n        this.setState({release_date})\r\n    }\r\n    onGenreChange = (e) =>{\r\n        const genre =Array.from(e.target.selectedOptions,(option)=>option.value) \r\n        this.setState({genre})\r\n    }\r\n    onDownloadLinkChange = (e) =>{\r\n        \r\n        const download_link = e.target.value\r\n        this.setState({download_link})\r\n    }\r\n    onStreamLinkChange = (e) =>{\r\n        const stream_link = e.target.value\r\n        this.setState({stream_link})\r\n    }\r\n    onTorrentLinkChange = (e) =>{\r\n        const torrent_link = e.target.value\r\n        this.setState({torrent_link})\r\n    }\r\n    onPosterChange = (e) =>{\r\n        const poster = e.target.files[0]\r\n        this.setState({poster})\r\n        \r\n    }\r\n    onScreenShotChange = (e) =>{\r\n        const screenshot = e.target.files[0]\r\n        this.setState({screenshot})\r\n    }\r\n    onSubmit = async(e) =>{\r\n        e.preventDefault()\r\n        const formData = new FormData()\r\n        formData.append('title',this.state.title)\r\n        formData.append('imdb',this.state.imdb)\r\n        formData.append('starcast',this.state.starcast)\r\n        formData.append('director',this.state.director)\r\n        formData.append('description',this.state.description)\r\n        formData.append('genre',this.state.genre)\r\n        formData.append('category',this.state.category)\r\n        formData.append('release_date',this.state.release_date)\r\n        formData.append('download_link',this.state.download_link)\r\n        formData.append('Poster',this.state.Poster)\r\n        console.log(this.state)\r\n        if(this.state.poster){\r\n            formData.append('poster',this.state.poster)\r\n        }\r\n        if(this.state.screenshot){\r\n            formData.append('screenshot',this.state.screenshot)\r\n        }\r\n        formData.append('torrent_link',this.state.torrent_link)\r\n        formData.append('stream_link',this.state.stream_link)\r\n        if(this.props.Operation ==='create'){\r\n            console.log(this.props.Operation)\r\n            const response = await axios({\r\n                url:'https://quickmovies.herokuapp.com/movie',\r\n                // url:'http://localhost:3001/movie',\r\n                method: 'post',\r\n                data:formData,\r\n                headers: {\r\n                    'Content-Type': `multipart/form-data; boundary=${'formData._boundary'}`\r\n                }\r\n            })\r\n            console.log(response)\r\n\r\n        }\r\n        if(this.props.Operation==='update'){\r\n            const response = await axios({\r\n                url:'https://quickmovies.herokuapp.com/movie/'+this.state._id,\r\n                method: 'patch',\r\n                data:formData,\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data; boundary=${form._boundary}'\r\n                }\r\n            })\r\n            console.log(response)\r\n        }\r\n        if(this.props.Operation==='delete'){\r\n            const response = await axios({\r\n                url:'https://quickmovies.herokuapp.com/movie/'+this.state._id,\r\n                // url: 'http://localhost:3001/movie/'+this.state._id,\r\n                method: 'delete'\r\n            })\r\n            console.log(response)\r\n        }\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='form'>\r\n                <form onSubmit={this.onSubmit} encType='multipart/form-data'>\r\n                    <input \r\n                        name='title'\r\n                        type='text'\r\n                        placeholder='Title'\r\n                        onChange={this.onTitleChange}\r\n                        defaultValue={this.state.title}\r\n                    />\r\n\r\n                    <input \r\n                        name='starcast'\r\n                        type='text'\r\n                        placeholder='Starcast'\r\n                        onChange={this.onStarcastChange}\r\n                        defaultValue={this.state.starcast}\r\n                    />\r\n                    \r\n                    <input \r\n                        name='director'\r\n                        type='text'\r\n                        placeholder='Director'\r\n                        onChange={this.onDirectorChange}\r\n                        defaultValue={this.state.director}\r\n                    />\r\n                    <input \r\n                        name='imdb'\r\n                        type='number'\r\n                        step='0.01'\r\n                        placeholder='IMDb'onChange={this.onImdbChange}\r\n                        defaultValue={this.state.imdb}\r\n                    />\r\n                    <input \r\n                        name='release_date'\r\n                        type='date'\r\n                        placeholder='release_date'\r\n                        onChange={this.onYearChange}\r\n                        defaultValue={this.state.release_date}\r\n                        \r\n                    />\r\n                    <textarea \r\n                        name='description'\r\n                        placeholder='Description'\r\n                        onChange={this.onDescriptionChange}\r\n                        defaultValue={this.state.description}\r\n                        \r\n                    />\r\n                    <select \r\n                        multiple onChange={this.onGenreChange} \r\n                        defaultValue={this.state.genre}\r\n                        \r\n                    >\r\n                        <option>Action</option>\r\n                        <option>Adult</option>\r\n                        <option>Adventure</option>\r\n                        <option>Comedy</option>\r\n                        <option>Crime</option>\r\n                        <option>Drama</option>\r\n                        <option>Fantasy</option>\r\n                        <option>History</option>\r\n                        <option>Horror</option>\r\n                        <option>Mystery</option>\r\n                        <option>Romance</option>\r\n                        <option>Sci-Fi</option>\r\n                        <option>Thriller</option>\r\n                    </select>\r\n                    <input defaultValue={this.state.genre} />\r\n\r\n                    <input \r\n                        name='download_link'\r\n                        placeholder='Download Link'\r\n                        onChange={this.onDownloadLinkChange}\r\n                        defaultValue={this.state.download_link}\r\n                    />\r\n                    <input \r\n                        name='torrent_link'\r\n                        placeholder='Torrent Link'\r\n                        onChange={this.onTorrentLinkChange}\r\n                        defaultValue={this.state.torrent_link}\r\n                    />\r\n                    <input \r\n                        name='stream_link'\r\n                        placeholder='Stream Link'\r\n                        onChange={this.onStreamLinkChange}\r\n                        defaultValue={this.state.stream_link}\r\n                    />\r\n\r\n\r\n                    <input \r\n                        type='file' \r\n                        name='poster' \r\n                        onChange={this.onPosterChange}\r\n                    />\r\n                    <input \r\n                        type='file' \r\n                        name='screenshot' \r\n                        onChange={this.onScreenShotChange}\r\n                    />\r\n                    <button>Submit</button>\r\n                </form>\r\n                {this.state.Poster && <img src={this.state.Poster} className='des_movie-poster' alt='img' />}\r\n                {this.state.poster && <img src={this.state.poster} alt='img' />}\r\n                \r\n                <div>\r\n                    <input \r\n                        type='search' \r\n                        onChange={this.onFindMovieDetails}\r\n                        placeholder='Enter imdb tt'\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieForm","import React from 'react';\r\nimport MovieForm from './MovieForm';\r\n\r\nconst DeleteMovie = (props) => {\r\n   \r\n    return(\r\n        <div>\r\n            <h1>Delete Movie</h1>\r\n            <MovieForm Operation={'delete'} id={props.id} />\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default DeleteMovie","import React from 'react';\r\nimport MovieForm from './MovieForm';\r\n\r\nconst UpdateMovie = (props) => {\r\n\r\n   \r\n    return(\r\n        <div> \r\n            <h1>Update Movie</h1>\r\n            <MovieForm Operation={'update'} id={props.id}/>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default UpdateMovie","import React from 'react';\r\nimport MovieForm from './MovieForm';\r\n\r\nconst CreateMovie = (props) => {\r\n    return(\r\n        <div> \r\n            <h1>Create Movie</h1>\r\n            <MovieForm Operation={'create'}  />\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default CreateMovie","import React from 'react';\r\nimport DeleteMovie from './DeleteMovie'\r\nimport UpdateMovie from './UpdateMovie';\r\nimport CreateMovie from './CreateMovei';\r\n\r\n\r\nclass Crud extends React.Component{\r\n    componentDidMount = () =>{\r\n        this.setState({id:this.props.match.params.id})\r\n        console.log(this.props.match.params.operation)\r\n        console.log(this.props.match.params.id)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.props.match.params.operation==='delete' && <DeleteMovie id={this.props.match.params.id} />}\r\n                {this.props.match.params.operation==='update' && <UpdateMovie id={this.props.match.params.id} />}\r\n                {this.props.match.params.operation==='create' && <CreateMovie id={this.props.match.params.id} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Crud","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nclass Movies extends React.Component{\r\n    state={movies:[]}\r\n    componentDidMount = async() =>{\r\n        const response =  await Axios({\r\n            // url:'http://localhost:3001/movies',\r\n            url:'https://quickmovies.herokuapp.com/movies',\r\n            method:'get'\r\n\r\n        })\r\n        this.setState({movies:response.data})\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='admin-movies'>\r\n                {this.state.movies.map((movie)=>{\r\n                    return <Container movie={movie} key={movie.id} />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst Container = (props)=>{\r\n    return(\r\n        <div className='slides'>\r\n            <div>\r\n                <div className='title'>{props.movie.title} </div>\r\n                \r\n                \r\n            </div>\r\n            <img src={props.movie.Poster} alt='poster' className='img' />\r\n            <div className='bottom'>\r\n                <NavLink to={'crud/delete/'+props.movie._id} >Delete</NavLink>\r\n                <NavLink to={'crud/update/'+props.movie._id} >Update</NavLink>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies","import React from 'react';\r\nimport { Link, useLocation, Redirect, useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport SearchedMovie from './cred/SearchedMovie';\r\n\r\nconst Header  = () =>{\r\n\r\n    let history = useHistory()\r\n    console.log(history)\r\n    const searchMovie = async (e) =>{\r\n        const query = e.target.value\r\n        const response = await Axios({\r\n            url:'https://quickmovies.herokuapp.com/search/?title='+query\r\n            // url:'http://localhost:3001/search?title='+query\r\n        })\r\n        // if(!history.location.pathname==='/search')\r\n        history.push({\r\n            pathname:'/search',\r\n            response : response.data\r\n        })\r\n        \r\n    }\r\n    return(\r\n        <div className='header'>\r\n            <h1><Link to='/'>QuickMovies</Link></h1>\r\n            <input \r\n                type='search'\r\n                className='search-box' \r\n                placeholder='Search' \r\n                onChange ={searchMovie}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport SearchedMovie from './SearchedMovie';\r\nimport Container from '../Container'\r\n\r\n\r\nclass Search extends React.Component{\r\n    componentDidMount = () =>{\r\n        console.log(this.props.history)\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <button \r\n                    className={'back-button'}\r\n                        onClick={()=>{  \r\n                            this.props.history.push('/')\r\n                        }}\r\n                > &#171;</button>\r\n                {this.props.history.location.response&&<MovieRender movies={this.props.history.location.response} />}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst MovieRender= (props) =>{\r\n    return(\r\n        <div>\r\n            <div className='genre-main_div'>\r\n                <div>\r\n                    \r\n                </div>\r\n                <div className='genre-slider'>\r\n                    {props.movies.map((movie)=>{\r\n                        return(\r\n                            <Container movie={movie} key={movie._id} />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport HomePage from './HomePage'\r\nimport GenreNav from './GenreNav'\r\nimport SingleMovie from './SingleMove'\r\nimport Crud from './cred/Crud'\r\nimport Movies from './cred/Movies';\r\nimport Header from './Header'\r\nimport Search from './cred/Search'\r\n\r\nclass App extends React.Component{\r\n    render(){\r\n        return(\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Header />\r\n                    <Switch >\r\n                        <Route exact path='/'  component={HomePage} />\r\n                        <Route exact path='/genre/:genre' component={GenreNav}/>\r\n                        <Route  path='/movie/:id' render={(props)=> <SingleMovie  {...props} /> }  />\r\n                        <Route  path='/crud/:operation/:id'  component={Crud}/>\r\n                        <Route  path='/movies'  component={Movies} />\r\n                        <Route  path='/search' component={Search} />   \r\n                    </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default  App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}